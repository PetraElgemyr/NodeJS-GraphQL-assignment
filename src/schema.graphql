type Cart {
	cartId: ID
	cartName: String
	totalAmount: Int
	products: [Product]
}

type Product {
	productId: ProductId
	productName: String
	productPrice: Int
	amount: Int
}

enum ProductId {
	PAN1
	ROSE1
	TW1
	KN1
	CTBRD1
}

type DeletedResourceResponse {
	deletedId: ID
	success: Boolean
}

type Query {
	getCartById(cartId: ID!): Cart
	getAllCarts: [Cart]
	getProductById(productId: ID!): Product
	getAllProducts: [Product]
}

input CreateProductInput {
	productName: String!
	productPrice: Int!
}

type Mutation {
	createCart(cartName: String!): Cart
	deleteCart(cartId: ID!): DeletedResourceResponse
	createProduct(input: CreateProductInput!): Product
	deleteProduct(productId: ID!): DeletedResourceResponse
	addProductToCart(cartId: ID!, input: addProductToCartInput!): Cart
	deleteProductFromCart(cartId: ID!, input: addProductToCartInput!): Cart
	emptyCart(cartId: ID!): Cart
}

input addProductToCartInput {
	productId: ProductId!
}
